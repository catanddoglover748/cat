# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qAfV8Yw1EqnHdbFzrKxnEcFLqQoPGY4i
"""

# streamlit_app.py

import streamlit as st

st.title("こんにちは！")
st.write("初めまして。これは最初のStreamlitアプリです。")
# ライブラリのインストール（最初の一度だけ）
!pip install xgboost

# ライブラリの読み込み
import pandas as pd
import xgboost as xgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# ダミーデータ作成（FinBERTスコア + Put/Call比）
data = pd.DataFrame({
    'finbert_sentiment': [0.8, 0.2, 0.65, 0.4, 0.9],
    'put_call_ratio': [0.3, 0.7, 0.4, 0.6, 0.2],
    '5day_return_up': [1, 0, 1, 0, 1]  # 1 = 株価が上がった, 0 = 下がった
})

# 説明変数と目的変数に分ける
X = data[['finbert_sentiment', 'put_call_ratio']]
y = data['5day_return_up']

# 学習データとテストデータに分割
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# モデル作成と学習
model = xgb.XGBClassifier(use_label_encoder=False, eval_metric='logloss')
model.fit(X_train, y_train)

# 新しい入力データ（予測したい内容）
new_input = pd.DataFrame({
    'finbert_sentiment': [0.72],  # 決算センチメントスコア（FinBERTなどで得る）
    'put_call_ratio': [0.35]      # オプションフローから取得するPut/Call比
})

# 予測実行
prediction = model.predict(new_input)
probability = model.predict_proba(new_input)

# 出力表示
print("予測: ", "BUY" if prediction[0] == 1 else "SELL")
print("上昇確率: {:.2f}%".format(probability[0][1] * 100))
